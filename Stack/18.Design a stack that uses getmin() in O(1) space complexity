//valid for only positive inputs
class MinStack {
public:
        stack<int> s;
        int min;
    MinStack() {
    }
    void push(int val) {
            if(s.empty()==true){
                s.push(val);
                min=val;
            }
            else{
                if(val<=min){
                  min=val;
                  val=val-min;
                  s.push(val);
                }
                else{
                  s.push(val);
                }
            }
    }
    void pop() {
        int t=s.pop();
        if(t<=0){
            res=min;
            min=min-t;
            return res;
        }
        else{
            return t;
        }
    }
    int top() {
        int t=s.top();
        return (t<=0)?min:t;
    }
    int getMin() {
        return min;
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(val);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */


class MinStack {
public:
        stack<int> s;
        int min;
 //for pos and neg numbers all
 void push(int x){
     if(s.empty()){
         min=x;
         s.push(x);
     }
     else if(x<=min){
         s.push(2*x -min);
         min=x;
     }
     else{
         s.push(x);
     }
 }
 int pop(){
     int t=s.pop();
     if(t<=min){
         int res=min;
         min=2*min-t;
         return res;
     }
     else{
         return t;
     }
 }
 int peek(){
     int t=s.top();
     return (t<=min)?min:t;
 }
 int getmin(){
     return min;
 }
}
 
