  vector<int> verticalOrder(Node *root){
        vector<int> ans;
        if(root==NULL){
            return ans;
        }
        map<int,map<int,vector<int>>> nodes;
        queue <pair<Node*, pair<int,int>>> q;
        
        q.push(make_pair(root, make_pair(0,0)));
        while(!q.empty()){
            pair<Node*, pair<int,int>> temp =q.front();
            q.pop();
            int hd=temp.second.first;
            int level= temp.second.second;
            Node* node = temp.first;
            nodes[hd][level].push_back(node->data);
            if(node->left){
                q.push(make_pair(root->left,make_pair(hd-1, level+1)));
            }
            if(node->right){
                q.push(make_pair(root->right,make_pair(hd+1,level+1)));
            }
        }
        for(auto i: nodes){ 
            for(auto j: i.second){
                for(auto k: j.second){
                    ans.push_back(k);
                    cout<<k;
                }
            }
        }
        return ans;
    }
